@model FreschOne.Models.TableViewModel
@{
    var userid = ViewBag.userid;
    var readwriteaccess = ViewBag.readwriteaccess;
    var tablename = ViewBag.tablename;
    var PKColumn = ViewBag.PKColumn;
    var tableDescription = ViewBag.tableDescription;
    var reportid = ViewBag.ReportID;
    var ReportName = ViewBag.ReportName;
}

<partial name="_Sidebar" />



<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-3">📊 @ReportName</h2>
    <a class="btn btn-sm btn-gold shadow-sm" href="@Url.Action("ExportToExcel", "TableXReport", new { userid = userid, reportid = reportid, tablename = tablename })">
        📥 Download All to Excel
    </a>
</div>

<div class="d-flex justify-content-end mb-2">
    <button id="toggleSearchBtn" class="btn btn-sm btn-outline-secondary" onclick="toggleSearch()">+ Show Search</button>
</div>

<div class="table-responsive border rounded shadow-sm">
    <table class="table table-hover table-sm align-middle" id="dataTable">
        <thead class="table-light">
            <tr>
                @foreach (var column in Model.Columns)
                {
                    string formattedColumn = System.Text.RegularExpressions.Regex.Replace(column.Replace("ID", ""), "(?<=.)([A-Z])", " $1");
                    <th class="text-nowrap">@formattedColumn</th>
                }
                <th class="text-center">Actions</th>
            </tr>

            <!-- Search Row -->
            <tr id="searchRow" style="display: none;">
                @foreach (var column in Model.Columns)
                {
                    <th>
                        @if (column.StartsWith("attachment_"))
                        {
                            <select class="form-select form-select-sm column-search" data-column="@column">
                                <option value="">All</option>
                                <option value="true">With Attachment</option>
                                <option value="false">No Attachment</option>
                            </select>
                        }
                        else
                        {
                            <input type="text" class="form-control form-control-sm column-search" data-column="@column" placeholder="Search..." />
                        }
                    </th>
                }
                <th></th>
            </tr>
        </thead>

        <tbody id="tableBody">
            @foreach (var row in Model.TableData)
            {
                <tr>
                    @foreach (var column in Model.Columns)
                    {
                        <td class="text-nowrap" data-column="@column" data-description="@row[column]">
                            @row[column]
                        </td>
                    }
                    <td class="text-center">
                        <a href="@Url.Action("GenerateReport", "DynamicReport", new { reportid = reportid, PKID = row["ID"], userId = userid })" class="btn btn-sm btn-green shadow-sm">View Report</a>
                        <a href="@Url.Action("ExportSingleToExcel", "TableXReport", new { reportid = reportid, id = row["ID"], tablename = tablename })" class="btn btn-sm btn-outline-primary">📄 Download</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination and Scripts (unchanged) -->
<div class="d-flex justify-content-center mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (ViewBag.pageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "TableX", new { userid = userid, tablename = tablename, pageNumber = 1 })">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "TableX", new { userid = userid, tablename = tablename, pageNumber = ViewBag.pageNumber - 1 })">&laquo; Prev</a>
                </li>
            }

            @for (var i = Math.Max(1, ViewBag.pageNumber - 2); i <= Math.Min(ViewBag.totalPages, ViewBag.pageNumber + 2); i++)
            {
                <li class="page-item @(i == ViewBag.pageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "TableX", new { userid = userid, tablename = tablename, pageNumber = i })">@i</a>
                </li>
            }

            @if (ViewBag.pageNumber < ViewBag.totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "TableX", new { userid = userid, tablename = tablename, pageNumber = ViewBag.pageNumber + 1 })">Next &raquo;</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "TableX", new { userid = userid, tablename = tablename, pageNumber = ViewBag.totalPages })">Last</a>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function toggleSearch() {
            let searchRow = document.getElementById("searchRow");
            let toggleBtn = document.getElementById("toggleSearchBtn");
            if (searchRow.style.display === "none") {
                searchRow.style.display = "table-row";
                toggleBtn.innerText = "- Hide Search";
            } else {
                searchRow.style.display = "none";
                toggleBtn.innerText = "+ Show Search";
            }
        }

        function filterTable() {
            let inputs = document.querySelectorAll('.column-search');
            let rows = document.querySelectorAll('#tableBody tr');

            rows.forEach(row => {
                let show = true;
                inputs.forEach(input => {
                    let column = input.getAttribute('data-column');
                    let value = input.value.toLowerCase();
                    let cell = row.querySelector(`td[data-column="${column}"]`);
                    if (cell) {
                        let cellText = cell.innerText.toLowerCase();
                        if (value && !cellText.includes(value)) show = false;
                    }
                });
                row.style.display = show ? "" : "none";
            });
        }

        document.querySelectorAll('.column-search').forEach(input => {
            input.addEventListener('keyup', filterTable);
            input.addEventListener('change', filterTable);
        });
    </script>
}
