@model FreschOne.Models.TableEditViewModel
@{
    var userid = ViewBag.userid;
    var readwriteaccess = ViewBag.readwriteaccess;
    var tablename = ViewBag.tablename;
    var columnTypes = ViewBag.ColumnTypes; // Get column types from ViewBag
    var columnLengths = ViewBag.ColumnLengths; // Get column lengths from ViewBag
    var PKID = ViewBag.PKID;
    var PKColumn = ViewBag.PKColumn;

    // Declare a variable to check if the form should be editable
    var editable = readwriteaccess == "RW";
    var tableDescription = ViewBag.tableDescription;

}


<partial name="_Sidebar" />

<h1>Edit @tableDescription</h1>

<form method="post" action="@Url.Action("Update", new { id = Model.Record["ID"], PKID = PKID, PKColumn = PKColumn, tablename = Model.TableName, userid = userid})">
    <!-- Include hidden ID field -->
    <input type="hidden" name="ID" value="@Model.Record["ID"]" />

    @foreach (var column in Model.Columns)
    {
        if (column == "ID") continue;  // Skip the ID column

        var columnValue = Model.Record[column];
        var columnType = columnTypes.ContainsKey(column) ? columnTypes[column] : "string"; // Default to string if not found
        var columnLength = columnLengths.ContainsKey(column) ? columnLengths[column] : 255; // Default length if not found

        <div class="form-group">

            @if (Model.ForeignKeys.Any(fk => fk.ColumnName == column))
            {
                <label for="@column">@column.Replace("ID", "")</label>
            }
            else
            {
                if (@column == PKColumn)
                {
                    <label for="@column" style="display: none;">@column</label>
                }
                else
                {
                    string formattedColumn = System.Text.RegularExpressions.Regex.Replace(column, "(?<=.)([A-Z])", " $1");
                    <label for="@formattedColumn">@formattedColumn</label>

                }
            }           

            @if (editable)
            {
                <!-- Editable rendering -->
                @if (columnType == "varchar" && columnLength <= 255)
                {
                    <input type="text" name="@column" value="@columnValue" class="form-control" />
                }
                else if (columnType == "varchar" && columnLength > 255)
                {
                    <textarea name="@column" class="form-control">@columnValue</textarea>
                }
                else if (Model.ForeignKeys.Any(fk => fk.ColumnName == column))
                {
                    var foreignKey = Model.ForeignKeys.First(fk => fk.ColumnName == column);
                    @Html.DropDownList(
                             foreignKey.ColumnName,
                             new SelectList(
                             Model.ForeignKeyOptions[foreignKey.ColumnName],
                             "Value", "Text", columnValue),
                             "Select...",
                             new { @class = "form-control" })
                }
                else if (columnType == "int" || columnType == "bigint" || columnType == "decimal")
                {
                    if (@column == PKColumn)
                    {
                        <input type="hidden" name="@column" value="@columnValue" class="form-control" />
                    }
                    else
                    {
                        <input type="number" name="@column" value="@columnValue" class="form-control" />

                    }
                }
                else if (columnType == "bit")
                {
                    <input type="checkbox" name="@column" value="true" class="form-check-input"
                    @if (columnValue != DBNull.Value && (bool)columnValue)
                    {
                        <text>checked</text>
                    } />
                }
                else if (columnType == "datetime")
                {
                    string formattedDate = columnValue != null ? DateTime.TryParse(columnValue.ToString(), out var dateValue)
                    ? dateValue.ToString("yyyy-MM-dd") : "" : "";
                    <input type="date" name="@column" value="@formattedDate" class="form-control" />
                }
                
            }
            else
            {
                <!-- Read-only rendering (using readonly attribute for form elements) -->
                @if (columnType == "varchar" && columnLength <= 255)
                {
                    <input type="text" name="@column" value="@columnValue" class="form-control" readonly />
                }
                else if (columnType == "varchar" && columnLength > 255)
                {
                    <textarea name="@column" class="form-control" readonly>@columnValue</textarea>
                }
                else if (Model.ForeignKeys.Any(fk => fk.ColumnName == column))
                {
                    var foreignKey = Model.ForeignKeys.First(fk => fk.ColumnName == column);
                    @Html.DropDownList(
                             foreignKey.ColumnName,
                             new SelectList(
                             Model.ForeignKeyOptions[foreignKey.ColumnName],
                             "Value", "Text", columnValue),
                             "Select...",
                             new { @class = "form-control", disabled = "disabled" })
                }
                else if (columnType == "int" || columnType == "bigint" || columnType == "decimal")
                {
                    if (@column == PKColumn)
                    {
                        <input type="hidden" name="@column" value="@columnValue" class="form-control" />
                    }
                    else
                    {
                        <input type="number" name="@column" value="@columnValue" class="form-control" />

                    }
                }
                else if (columnType == "bit")
                {
                    <input type="checkbox" name="@column" value="true" class="form-check-input"
                    @if (columnValue != DBNull.Value && (bool)columnValue)
                    {
                        <text>checked</text>
                    } disabled />
                }
                else if (columnType == "datetime")
                {
                    string formattedDate = columnValue != null ? DateTime.TryParse(columnValue.ToString(), out var dateValue)
                    ? dateValue.ToString("yyyy-MM-dd") : "" : "";
                    <input type="date" name="@column" value="@formattedDate" class="form-control" readonly />
                }
               
            }
        </div>
    }

    <br />
    <hr />
    @if (editable)
    {
        <!-- Only show Save button if editable -->
        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
    }

    <!-- Back link styled as a simple hyperlink -->
    <div class="form-group text-right">
        <a href="@Url.Action("Index", "TableY", new { userid, PKID, PKColumn, tablename })" class="btn btn-link">
            Back to Previous Screen
        </a>
    </div>

</form>
