@* @model Tuple<Dictionary<string, List<foUserTable>>, List<foTablePrefix>>

@{
    ViewData["Title"] = "Data Management";
}

<h1>Data Management</h1>

<partial name="_Sidebar" />

<div class="accordion" id="accordionExample">
    @foreach (var group in Model.Item1)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="heading_@group.Key">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse_@group.Key" aria-expanded="true" aria-controls="collapse_@group.Key">
                    @group.Key
                </button>
            </h2>
            <div id="collapse_@group.Key" class="accordion-collapse collapse show" aria-labelledby="heading_@group.Key" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <ul>
                        @foreach (var access in group.Value)
                        {
                            var prefix = Model.Item2.FirstOrDefault(p => access.TableName.StartsWith(p.Prefix));
                            var displayName = access.TableName;
                            if (prefix != null)
                            {
                                displayName = access.TableName.Replace(prefix.Prefix, string.Empty);
                            }

                            <li>
                                <a href="@Url.Action("Index", "TableX", new { userid = access.UserID, tablename = access.TableName })">
                                    @displayName
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>
 *@


@model Tuple<Dictionary<string, List<foUserTable>>, List<foTablePrefix>>

@{
    ViewData["Title"] = "Data Management";
    var groupedTables = Model.Item1;
    var tablePrefixes = Model.Item2;
}

<partial name="_Sidebar" />

<h1 class="mb-4">Data Management</h1>

<div class="accordion" id="accordionExample">
    @foreach (var group in groupedTables)
    {
        var groupId = $"group_{group.Key.Replace(" ", "_")}";
    <div class="accordion-item">
        <h2 class="accordion-header" id="heading_@groupId">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapse_@groupId" aria-expanded="false" aria-controls="collapse_@groupId">
                @group.Key
            </button>
        </h2>
            <div id="collapse_@groupId" class="accordion-collapse collapse" aria-labelledby="heading_@groupId">
                <div class="accordion-body">
                <div class="row">
                    @foreach (var access in group.Value)
                        {
                            var prefix = tablePrefixes.FirstOrDefault(p => access.TableName.StartsWith(p.Prefix));
                            var displayName = access.TableName;
                            if (prefix != null)
                            {
                                displayName = access.TableName.Replace(prefix.Prefix, "").Replace("_", " ");
                            }

                            <div class="col-md-6 col-lg-4 mb-3">
                                <div class="card shadow-sm h-100">
                                    <div class="card-body d-flex flex-column justify-content-between">
                                        <div>
                                            <h6 class="card-title">@displayName</h6>
                                            <p class="card-text text-muted small">@access.TableName</p>
                                        </div>
                                        <a class="btn btn-outline-primary mt-2"
                                           href="@Url.Action("Index", "TableX", new { userid = access.UserID, tablename = access.TableName })">
                                            Manage Data
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
