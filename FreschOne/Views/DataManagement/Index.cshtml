@model Tuple<Dictionary<string, List<foUserTable>>, List<foTablePrefix>>

<h1>Data Management</h1>

<partial name="_Sidebar" />

<div class="accordion" id="accordionExample">
    @foreach (var group in Model.Item1)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="heading_@group.Key">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse_@group.Key" aria-expanded="true" aria-controls="collapse_@group.Key">
                    @group.Key
                </button>
            </h2>
            <div id="collapse_@group.Key" class="accordion-collapse collapse show" aria-labelledby="heading_@group.Key" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <ul>
                        @foreach (var access in group.Value)
                        {
                            // Dynamically remove the prefix from the TableName
                            var prefix = Model.Item2.FirstOrDefault(p => access.TableName.StartsWith(p.Prefix));
                            var displayName = access.TableName;
                            if (prefix != null)
                            {
                                displayName = access.TableName.Replace(prefix.Prefix, string.Empty);
                            }

                            // Pass the original TableName (with prefix) to the URL, but display the modified TableName (without prefix)
                            <li>
                                <a href="@Url.Action("Index", "TableX", new { userid = access.UserID, tablename = access.TableName, readwriteaccess = access.ReadWriteAccess })">
                                    @displayName
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>
