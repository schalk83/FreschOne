@model List<FreschOne.Models.foUser>

@{
    var userid = ViewBag.userid;
}
<partial name="_Sidebar" />

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<h2>Users</h2>
<a href="@Url.Action("Create", new { userid = userid })" class="btn btn-sm btn-green">Add New User</a>

<table class="table table-bordered sortable">
    <thead>
        <tr>
            <th onclick="sortTable(this)" style="cursor:pointer;">UserName</th>
            <th onclick="sortTable(this)" style="cursor:pointer;">First</th>
            <th onclick="sortTable(this)" style="cursor:pointer;">Last</th>
            <th onclick="sortTable(this)" style="cursor:pointer;">Email</th>
            <th onclick="sortTable(this)" style="cursor:pointer;">Admin</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Email</td>
                <td>@(user.Admin ? "Yes" : "No")</td>
                <td>
                    <a href="@Url.Action("Edit", new { id = user.ID, userid = userid })" class="btn btn-sm btn-blue">Edit</a>
                    <form method="post" asp-action="Delete" asp-route-id="@user.ID" asp-route-userid="@userid" style="display:inline">
                        <button type="submit" class="btn btn-sm btn-red">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function sortTable(th) {
            const table = th.closest("table");
            const tbody = table.querySelector("tbody");
            const index = Array.from(th.parentNode.children).indexOf(th);
            const ascending = !th.classList.contains("sorted-asc");

            Array.from(table.querySelectorAll("th")).forEach(th => th.classList.remove("sorted-asc", "sorted-desc"));
            th.classList.add(ascending ? "sorted-asc" : "sorted-desc");

            const rows = Array.from(tbody.querySelectorAll("tr"));
            rows.sort((rowA, rowB) => {
                const cellA = rowA.children[index].textContent.trim().toLowerCase();
                const cellB = rowB.children[index].textContent.trim().toLowerCase();
                return ascending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
            });

            rows.forEach(row => tbody.appendChild(row));
        }
    </script>
    <style>
        th.sorted-asc::after {
            content: " ▲";
            font-size: 0.75em;
        }

        th.sorted-desc::after {
            content: " ▼";
            font-size: 0.75em;
        }
    </style>
}
