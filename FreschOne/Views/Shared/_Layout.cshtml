<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FreschOne</title>

    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

    <!-- Custom Styles -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FreschOne.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/sidebar.css" asp-append-version="true" />

    @RenderSection("Styles", required: false)
</head>
<body class="@ViewData["BodyClass"]">
    <div class="container-fluid px-3 px-md-4">
        <div class="content-wrapper w-10">
            @RenderBody()
        </div>
    </div>

    <!-- Libraries -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <!-- Custom Scripts -->
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await Html.PartialAsync("_BrowseModal")
    @RenderSection("Scripts", required: false)

    <script>
        function openSearchModal(tableName, columnName, targetField) {
            const modal = new bootstrap.Modal(document.getElementById('searchModal'));

        let niceColumnName = columnName
            .replace(/ID$/i, '') // Remove trailing 'ID'
            .replace(/_/g, ' ')  // Replace underscores with spaces
            .replace(/([a-z])([A-Z])/g, '$1 $2') // Split camelCase
            .trim(); // Clean any trailing spaces


            document.getElementById('searchModalContent').innerHTML = `
                <div class="modal-header">
            <h5 class="modal-title">Select ${niceColumnName}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>`;
            modal.show();

            fetch(`/ProcessEvents/GetSearchOptions?tableName=${encodeURIComponent(tableName)}&columnName=${encodeURIComponent(columnName)}`)
                .then(response => response.json())
                .then(data => {
                    let content = `
                        <div class="modal-header">
                    <h5 class="modal-title">Select ${niceColumnName}</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <ul class="list-group">`;

                    if (data.length === 0) {
                        content += `<li class="list-group-item text-muted">No results found.</li>`;
                    } else {
                        data.forEach(item => {
                            const id = item.ID?.toString().replace(/'/g, "\\'");
                            const display = (item.Display ?? "").replace(/'/g, "\\'");
                            content += `<li class="list-group-item list-group-item-action" style="cursor:pointer;" onclick="selectSearchValue('${targetField}', '${id}', '${display}')">${display}</li>`;
                        });
                    }

                    content += `</ul></div>`;
                    document.getElementById('searchModalContent').innerHTML = content;
                })
                .catch(err => {
                    document.getElementById('searchModalContent').innerHTML = `
                        <div class="modal-header">
                            <h5 class="modal-title">Error</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <p class="text-danger">Error loading data. Please try again.</p>
                        </div>`;
                    console.error('Fetch error:', err);
                });
        }

            function selectSearchValue(fieldId, value, displayText) {
            const hiddenInput = document.getElementById(fieldId);
            const displayInput = document.getElementById(fieldId + "_Display");

            // Handle CreateStep format: separate hidden and display fields
            if (hiddenInput && displayInput) {
                hiddenInput.value = value;
                displayInput.value = displayText;
            }
            // Handle PendingStep format: same field ID for display, hidden input by name
            else {
                const displayField = document.getElementById(fieldId);
                const hiddenInputs = document.querySelectorAll('input[type="hidden"][name="' + fieldId + '"]');

                if (displayField) displayField.value = displayText;
                hiddenInputs.forEach(input => input.value = value);
            }

            const modalEl = document.getElementById('searchModal');
            const modalInstance = bootstrap.Modal.getInstance(modalEl);
            if (modalInstance) modalInstance.hide();
        }


    </script>
</body>
</html>
