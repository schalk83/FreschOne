@using FreschOne.Helpers

@{
    ViewData["Title"] = ViewBag.ReportName;
    var userID = ViewBag.UserID;
    var reportName = ViewBag.ReportName;
    var tableDescriptions = ViewBag.TableDescriptions as Dictionary<string, string>;
}
<partial name="_Sidebar" />

<h2>@reportName</h2>
<div class="d-flex justify-content-end mb-2">
    <button class="btn btn-outline-primary btn-sm me-2" onclick="expandAll()">Expand All</button>
    <button class="btn btn-outline-secondary btn-sm" onclick="collapseAll()">Collapse All</button>
</div>

@if (ViewBag.SearchResult != null)
{
    var tables = ViewBag.ReportTables as List<object>;
    var reportData = ViewBag.ReportData as Dictionary<string, Queue<System.Data.DataTable>>;

    <div class="accordion" id="reportAccordion">
        @for (int i = 0; i < tables.Count; i++)
        {
            string key = "", tableDescription = "";
            string formType = "";
            int? columnCount = null;

            if (tables[i] is FreschOne.Models.foReportTable t)
            {
                key = t.TableName;
                formType = t.FormType;
                columnCount = t.ColumnCount;
                tableDescription = t.TableDescription;
            }
            else if (tables[i] is FreschOne.Models.foReportTableQuery q)
            {
                key = "Q_" + q.ID;
                formType = q.FormType;
                columnCount = q.ColumnCount;
                tableDescription = q.TableDescription;

            }

            var tablesWithQR = ViewBag.TablesWithQR as HashSet<string>;
            bool hasQR = tablesWithQR != null && tablesWithQR.Contains(key);

            var headingId = $"heading_{i}";
            var collapseId = $"collapse_{i}";

            <div class="accordion-item">
                <h2 class="accordion-header" id="@headingId">
                    <button class="accordion-button collapsed fw-bold fs-5" type="button" data-bs-toggle="collapse"
                            data-bs-target="#@collapseId" aria-expanded="@(i == 0 ? "true" : "false")" aria-controls="@collapseId">
                        @tableDescription
                    </button>
                </h2>
                <div id="@collapseId" class="accordion-collapse collapse show" aria-labelledby="@headingId" data-bs-parent="#reportAccordion">
                    <div class="accordion-body">
                        @if (reportData != null && reportData.ContainsKey(key) && reportData[key].Count > 0)
                        {
                            var matchingDataset = reportData[key].Dequeue();

                            if (matchingDataset.Rows.Count > 0)
                            {
                                @if (formType == "T")
                                {
                                    <table class="table sortable">
                                        <thead>
                                            <tr>
                                                @foreach (var column in matchingDataset.Columns.Cast<System.Data.DataColumn>().Where(c => c.ColumnName != "QR"))
                                                {
                                                    string formattedColumn = System.Text.RegularExpressions.Regex.Replace(column.ColumnName.Replace("ID", ""), "(?<=.)([A-Z])", " $1");
                                                    if (formattedColumn.StartsWith("attachment_")) formattedColumn = formattedColumn.Replace("attachment_", "");
                                                    if (formattedColumn.StartsWith("geo_")) formattedColumn = formattedColumn.Replace("geo_", "");
                                                    <th onclick="sortTable(this)">@formattedColumn</th>
                                                }

                                                @if (hasQR)
                                                {
                                                    <th>QR Code</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (System.Data.DataRow row in matchingDataset.Rows)
                                            {
                                                <tr>
                                                    @foreach (var col in matchingDataset.Columns.Cast<System.Data.DataColumn>().Where(c => c.ColumnName != "QR"))
                                                    {
                                                        var val = row[col];
                                                        string strVal = val?.ToString() ?? "";

                                                        if (col.ColumnName.StartsWith("attachment_") && strVal.Contains(";"))
                                                        {
                                                            var parts = strVal.Split(';');
                                                            var desc = parts[0].Trim();
                                                            var url = parts.Length > 1 ? parts[1].Trim().Replace("\\", "/") : "";
                                                            <td>@(string.IsNullOrWhiteSpace(url) ? desc : Html.Raw($"<a href='{Url.Content("~/" + url)}' target='_blank'>{desc}</a>"))</td>
                                                        }
                                                        else
                                                        {
                                                            <td>@strVal</td>
                                                        }
                                                    }

                                                    @if (hasQR)
                                                    {
                                                        var qrContent = string.Join("\n", matchingDataset.Columns.Cast<System.Data.DataColumn>()
                                                        .Where(c => c.ColumnName != "QR" && c.ColumnName != "ID")
                                                        .Select(c => $"{c.ColumnName}: {row[c]}"));

                                                        var qrImage = FreschOne.Helpers.QRCodeUtils.GenerateQrCode(qrContent);

                                                        <td>
                                                            @if (!string.IsNullOrWhiteSpace(qrImage))
                                                            {
                                                                <img src="@qrImage" alt="QR Code" style="width:100px; height:100px;" />
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }

                                else if (formType == "F")
                                {
                                    foreach (System.Data.DataRow row in matchingDataset.Rows)
                                    {
                                        var validColumns = matchingDataset.Columns.Cast<System.Data.DataColumn>()
                                        .Where(c => c.ColumnName != "ID" && c.ColumnName != "QR").ToList();


                                        int colCount = columnCount ?? 2;
                                        int rowsRequired = (int)Math.Ceiling((double)validColumns.Count / colCount);

                                        <table class="table freeform-table">
                                            <tbody>
                                               


                                                @for (int rowIdx = 0; rowIdx < rowsRequired; rowIdx++)
                                                {
                                                    <tr>
                                                        @for (int colIdx = 0; colIdx < colCount; colIdx++)
                                                        {
                                                            int dataIndex = (rowIdx * colCount) + colIdx;

                                                            if (dataIndex < validColumns.Count)
                                                            {
                                                                var column = validColumns[dataIndex];
                                                                string formattedColumn = System.Text.RegularExpressions.Regex.Replace(column.ColumnName.Replace("ID", ""), "(?<=.)([A-Z])", " $1");
                                                                if (formattedColumn.StartsWith("attachment_")) formattedColumn = formattedColumn.Replace("attachment_", "");
                                                                if (formattedColumn.StartsWith("geo_")) formattedColumn = formattedColumn.Replace("geo_", "");

                                                                <td class="freeform-label"><strong>@formattedColumn:</strong></td>
                                                                <td class="freeform-value">
                                                                    @{
                                                                        var val = row[column.ColumnName]?.ToString() ?? "";
                                                                        if (column.ColumnName.StartsWith("attachment_") && val.Contains(";"))
                                                                        {
                                                                            var parts = val.Split(';');
                                                                            var desc = parts[0].Trim();
                                                                            var url = parts.Length > 1 ? parts[1].Trim().Replace("\\", "/") : "";
                                                                            if (!string.IsNullOrWhiteSpace(url))
                                                                            {
                                                                                <a href="@Url.Content("~/" + url)" target="_blank">@desc</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                @desc
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            @val
                                                                        }
                                                                    }
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td class="freeform-label empty">&nbsp;</td>
                                                                <td class="freeform-value empty">&nbsp;</td>
                                                            }
                                                        }
                                                    </tr>
                                                }
                                                @if (hasQR)
                                                {
                                                    var qrContent = string.Join("\n", validColumns
                                                    .Where(c => c.ColumnName != "ID")  // Optional!
                                                    .Select(c => $"{c.ColumnName}: {row[c]}"));


                                                    var qrImage = FreschOne.Helpers.QRCodeUtils.GenerateQrCode(qrContent);

                                                    if (!string.IsNullOrWhiteSpace(qrImage))
                                                    {
                                                        <tr>
                                                            <td colspan="@(colCount * 2)">
                                                                <strong>QR Code:</strong><br />
                                                                <img src="@qrImage" alt="QR Code" style="width:150px; height:150px;" />
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }
                            }
                            else
                            {
                                <p>No data found</p>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}



<script>
    function expandAll() {
        document.querySelectorAll('.accordion-collapse').forEach(section => section.classList.add('show'));
        document.querySelectorAll('.accordion-button').forEach(button => button.classList.remove('collapsed'));
    }

    function collapseAll() {
        document.querySelectorAll('.accordion-collapse').forEach(section => section.classList.remove('show'));
        document.querySelectorAll('.accordion-button').forEach(button => button.classList.add('collapsed'));
    }

    function sortTable(th) {
        const table = th.closest("table");
        const tbody = table.querySelector("tbody");
        const index = Array.from(th.parentNode.children).indexOf(th);
        const ascending = !th.classList.contains("sorted-asc");

        Array.from(table.querySelectorAll("th")).forEach(th => th.classList.remove("sorted-asc", "sorted-desc"));
        th.classList.add(ascending ? "sorted-asc" : "sorted-desc");

        const rows = Array.from(tbody.querySelectorAll("tr"));

        rows.sort((rowA, rowB) => {
            const cellA = rowA.children[index].textContent.trim().toLowerCase();
            const cellB = rowB.children[index].textContent.trim().toLowerCase();
            return ascending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
        });

        rows.forEach(row => tbody.appendChild(row));
    }
</script>
